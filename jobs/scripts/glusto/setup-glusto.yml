# vim:ft=ansible:
---
- hosts: localhost
  tasks:
  - name: Create an ssh keypair
    shell: ssh-keygen -b 2048 -t rsa -f $GLUSTO_WORKSPACE/glusto -q -N ""
    args:
      creates: "{{ lookup('env', 'GLUSTO_WORKSPACE')}}/glusto"

#- hosts: gluster_nodes[0]
  #tasks:
  #- name: Copy ssh key
    #copy: src="{{ lookup('env', 'WORKSPACE') }}/glusto" dest=/root/.ssh/id_rsa mode=600

  #- name: Install nginx
    #yum: name={{ item }} state=installed
    #with_items:
    #- nginx

  #- name: Install the nginx config file
    #copy:
      #src: nginx.conf
      #dest: /etc/nginx/default.d/rpm.conf

  #- name: Create /var/www
    #file:
      #path: /var/www
      #state: directory

  #- name: Copy packages to /var/www
    #command: cp -r /root/glusterfs/RPMS/ /var/www/

  #- name: Setup SELinux context
    #command: restorecon -R /var/www/

  #- name: Open port 80 on the firewall
    #command: firewall-cmd --permanent --zone=public --add-port=80/tcp

  #- name: Reload firewall config
    #command: firewall-cmd --reload

  #- name: Start nginx
    #service:
      #name: nginx
      #state: restarted

- hosts: gluster_nodes[1:]
  tasks:
  - name: Set workspace
    set_fact:
      workspace: "{{ lookup('env', 'GLUSTO_WORKSPACE') }}"

  - name: Add entries to authorized_keys
    authorized_key: user=root key="{{ lookup('file', workspace + '/glusto.pub')}}"

- hosts: gluster_nodes
  tasks:
  - name: Setup EPEL
    yum: name=epel-release state=installed

# Server and client tasks
- hosts: gluster_nodes[1:8]
  tasks:
  - name: Disable ipv6 in eth0 config
    lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-eth0
      regexp: ^IPV6INIT=
      line: IPV6INIT=no

  - name: Disable ipv6 in network config
    lineinfile:
      dest: /etc/sysconfig/network
      regexp: ^NETWORKING_IPV6=
      line: NETWORKING_IPV6=no

  - name: Disable ipv6 in sysctl
    sysctl:
      name: "{{ item }}"
      value: 1
      state: present
      reload: yes
    with_items:
    - net.ipv6.conf.all.disable_ipv6
    - net.ipv6.conf.default.disable_ipv6

  - name: Stop Firewall
    service: name=firewalld state=stopped

  - name: Flush iptables
    command: "iptables -F"

  - name: Flush iptables
    command: "iptables -X"

  - name: Setup arequal repo
    yum_repository:
      name: nigelbabu-arequal
      description: Copr repo for arequal
      baseurl: https://copr-be.cloud.fedoraproject.org/results/nigelbabu/arequal/epel-7-$basearch/
      gpgcheck: yes
      gpgkey: https://copr-be.cloud.fedoraproject.org/results/nigelbabu/arequal/pubkey.gpg
      repo_gpgcheck: no

  - name: Install dependency packages
    yum: name={{ item }} state=installed
    with_items:
    - nfs-utils
    - cifs-utils
    - arequal
    - rsync

# Set up servers
- hosts: gluster_nodes[1:6]
  tasks:

  - name: Install dependency packages
    yum: name={{ item }} state=installed
    with_items:
    - libibverbs

  - name: Setup the repo
    yum_repository:
      name: gluster_nightly
      description: The nightly repo for Gluster
      #baseurl: "{{ 'http://' + hostvars[groups['gluster_nodes'][0]]['ansible_eth0']['ipv4']['address'] + '/RPMS/' }}"
      baseurl: http://artifacts.ci.centos.org/gluster/nightly/master/$releasever/$basearch
      gpgcheck: no
      repo_gpgcheck: no

  - name: Install gluster
    yum: name={{ item }} state=installed
    with_items:
    - glusterfs-server
    - glusterfs-cli
    - glusterfs-debuginfo

  - name: Install gluster GNFS package
    yum: name=glusterfs-gnfs state=installed
    ignore_errors: True

  - name: Allocate space to a file
    command: "fallocate -l 50G /var/{{item}}"
    args:
      creates: "/var/{{item}}"
    with_items:
    - data0
    - data1
    - data2
    - data3

  - name: Associate loopback device to file
    command: "losetup -f /var/{{item.1}}"
    args:
      creates: "/dev/{{item.0}}"
    with_together:
    - ['loop0', 'loop1', 'loop2', 'loop3']
    - ['data0', 'data1', 'data2', 'data3']
    loop_control:
      pause: 2
    ignore_errors: True

  - name: Create physical volume
    command: "pvcreate /dev/{{item}}"
    with_items:
    - loop0
    - loop1
    - loop2
    - loop3
    loop_control:
      pause: 2
    ignore_errors: True

  - name: Create volume groups
    lvg:
      vg: "{{item.0}}"
      pvs: "/dev/{{item.1}}"
    ignore_errors: yes
    with_together:
    - ['group0', 'group1', 'group2', 'group3']
    - ['loop0', 'loop1', 'loop2', 'loop3']

  - name: Create thin pool
    command: "lvcreate -L 45G -T {{item}}/pool"
    args:
      creates: "/dev/{{item}}"
    ignore_errors: yes
    with_items:
    - group0
    - group1
    - group2
    - group3

  - name: Create thin volume
    command: "lvcreate -V 45G -T {{item.0}}/pool -n {{item.1}}"
    args:
      creates: "/dev/{{item.0}}/{{item.1}}"
    ignore_errors: yes
    with_together:
    - ['group0', 'group1', 'group2', 'group3']
    - ['vol0', 'vol1', 'vol2', 'vol3']

  - name: Format the volumes
    command: "mkfs.xfs /dev/{{item.0}}/{{item.1}}"
    ignore_errors: yes
    with_together:
    - ['group0', 'group1', 'group2', 'group3']
    - ['vol0', 'vol1', 'vol2', 'vol3']

  - name: Mount the bricks
    mount: name="/mnt/{{item.0}}" src="/dev/{{item.1}}" state=mounted fstype=xfs
    with_together:
    - ['vol0', 'vol1', 'vol2', 'vol3']
    - ['group0/vol0', 'group1/vol1', 'group2/vol2', 'group3/vol3']

  - name: Start Gluster Daemon
    service: name=glusterd state=started

  - name: Status rpcbind
    service: name=rpcbind state=started

# Setup client
- hosts: gluster_nodes[7:8]
  tasks:
  - name: Install dependency packages
    yum: name={{ item }} state=installed
    with_items:
    - python-pip
    - libxml2-devel
    - libxslt-devel
    - gcc
    - python-devel
    - fuse
    - fuse-libs

  - name: Setup the repo
    yum_repository:
      name: gluster_nightly
      description: The nightly repo for Gluster
      #baseurl: "{{ 'http://' + hostvars[groups['gluster_nodes'][0]]['ansible_eth0']['ipv4']['address'] + '/RPMS/' }}"
      baseurl: http://artifacts.ci.centos.org/gluster/nightly/master/$releasever/$basearch
      gpgcheck: no
      repo_gpgcheck: no

  - name: Install gluster
    yum: name={{ item }} state=installed
    with_items:
    - glusterfs-fuse

  - name: Install python-docx
    pip: name=python-docx state=present

- hosts: gluster_nodes[1]
  tasks:
  - name: Peer probe all nodes
    command: "gluster peer probe {{hostvars[item]['ansible_eth0']['ipv4']['address']}}"
    with_items: "{{groups['gluster_nodes'][2:7]}}"

  - name: Install dependency packages
    yum: name={{ item }} state=installed
    with_items:
    - ctdb
    - samba
    - samba-vfs-glusterfs
    - samba-client

  - name: Start smb
    service: name=smb state=started

  - name: Setup SELinux for Samba
    seboolean: name=samba_load_libgfapi state=yes persistent=yes

  - name: Setup SELinux in permissive mode
    selinux: policy=targeted state=enforcing

  - name: Setup Samba credentials
    shell: (echo "foobar"; echo "foobar") | smbpasswd -a root
  - name: Setup Samba configuration
    blockinfile:
      dest: /etc/samba/smb.conf
      insertafter: '\[global\]'
      content: |
          kernel share modes = no
          kernel oplocks = no
          map archive = no
          map hidden = no
          map read only = no
          map system = no
          store dos attributes = yes
    tags: smb

- hosts: gluster_nodes[0]
  tasks:
  - name: Copy ssh key
    copy: src="{{ lookup('env', 'GLUSTO_WORKSPACE') }}/glusto" dest=/root/.ssh/id_rsa mode=600

  - name: Install git and pip
    yum: name="{{item}}" state=present
    with_items:
    - git
    - python-pip
    - gcc
    - python-devel

  - name: Set glusto version
    set_fact:
      GERRIT_REFSPEC: "{{ lookup('env', 'GERRIT_REFSPEC') }}"

  - name: Install Glusto
    pip: name=' git+git://github.com/loadtheaccumulator/glusto.git' editable=false

  - name: Clone the glusto-tests repo - {{ GERRIT_REFSPEC}}
    git:
        repo: git://review.gluster.org/glusto-tests.git
        dest: /root/glusto-tests
        refspec: "{{GERRIT_REFSPEC}}"
        version: FETCH_HEAD

  - name: Install glustolibs
    command: "python setup.py develop chdir=/root/glusto-tests/{{item}}"
    with_items:
    - glustolibs-gluster
    - glustolibs-io
    - glustolibs-misc

  - name: Create the config file
    template: src=templates/gluster_tests_config.yml.j2 dest=/root/gluster_tests_config.yml
